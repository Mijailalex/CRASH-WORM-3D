# ============================================================================
# üìù CRASH WORM 3D - EDITOR CONFIGURATION
# ============================================================================
# Ubicaci√≥n: .editorconfig
# Configuraci√≥n universal para mantener consistencia entre editores
# Soportado por VS Code, WebStorm, Sublime Text, Vim, Emacs y m√°s

# Indicar que este es el archivo ra√≠z
root = true

# ========================================
# üåç CONFIGURACI√ìN GLOBAL
# ========================================
[*]
# Conjunto de caracteres
charset = utf-8

# Tipo de final de l√≠nea (LF para compatibilidad Unix/Linux/macOS)
end_of_line = lf

# Insertar l√≠nea final al final del archivo
insert_final_newline = true

# Remover espacios en blanco al final de las l√≠neas
trim_trailing_whitespace = true

# Indentaci√≥n con espacios
indent_style = space
indent_size = 2

# Ancho m√°ximo de l√≠nea (gu√≠a visual)
max_line_length = 100

# ========================================
# ‚öõÔ∏è ARCHIVOS REACT/JAVASCRIPT/TYPESCRIPT
# ========================================
[*.{js,jsx,ts,tsx,mjs,cjs}]
indent_size = 2
max_line_length = 100

# Configuraci√≥n espec√≠fica para archivos de configuraci√≥n JS
[*.config.{js,ts,mjs,cjs}]
indent_size = 2
max_line_length = 120

# ========================================
# üé® ARCHIVOS DE ESTILO
# ========================================
[*.{css,scss,sass,less,styl}]
indent_size = 2
max_line_length = 120

# ========================================
# üèóÔ∏è ARCHIVOS DE CONFIGURACI√ìN
# ========================================

# JSON (mantener formato estricto)
[*.json]
indent_size = 2
max_line_length = 120

# YAML (Docker Compose, GitHub Actions, etc.)
[*.{yml,yaml}]
indent_size = 2
max_line_length = 120

# TOML (configuraciones Rust, etc.)
[*.toml]
indent_size = 2

# XML/SVG
[*.{xml,svg}]
indent_size = 2
max_line_length = 120

# ========================================
# üìù ARCHIVOS DE DOCUMENTACI√ìN
# ========================================

# Markdown
[*.md]
indent_size = 2
max_line_length = 120
# No remover espacios al final (necesarios para saltos de l√≠nea en MD)
trim_trailing_whitespace = false

# Archivos de texto plano
[*.txt]
indent_size = 2
max_line_length = 80

# ========================================
# üê≥ ARCHIVOS DOCKER
# ========================================
[Dockerfile*]
indent_size = 2
max_line_length = 120

[docker-compose*.yml]
indent_size = 2
max_line_length = 120

# ========================================
# üåê ARCHIVOS WEB
# ========================================

# HTML
[*.{html,htm}]
indent_size = 2
max_line_length = 120

# Templates
[*.{hbs,handlebars,mustache,twig}]
indent_size = 2
max_line_length = 120

# ========================================
# üóÑÔ∏è ARCHIVOS DE DATOS
# ========================================

# CSV (usar tabs para mejor compatibilidad)
[*.csv]
indent_style = tab
trim_trailing_whitespace = false

# SQL
[*.sql]
indent_size = 2
max_line_length = 120

# ========================================
# üîß ARCHIVOS DE CONFIGURACI√ìN ESPEC√çFICOS
# ========================================

# ESLint
[.eslintrc*]
indent_size = 2

# Prettier
[.prettierrc*]
indent_size = 2

# Babel
[.babelrc*]
indent_size = 2

# PostCSS
[postcss.config.*]
indent_size = 2

# Stylelint
[.stylelintrc*]
indent_size = 2

# ========================================
# üì¶ PACKAGE MANAGERS
# ========================================

# package.json y similares
[package*.json]
indent_size = 2

# npm configuration
[.npmrc]
indent_style = space
indent_size = 2

# Yarn configuration
[.yarnrc*]
indent_size = 2

# pnpm configuration
[.pnpmrc]
indent_size = 2

# ========================================
# üîí ARCHIVOS DE ENTORNO Y SECRETOS
# ========================================

# Variables de entorno
[.env*]
indent_size = 2
# No insertar l√≠nea final (puede causar problemas en algunos casos)
insert_final_newline = false

# ========================================
# üß™ ARCHIVOS DE TESTING
# ========================================

# Jest configuration
[jest.config.*]
indent_size = 2

# Vitest configuration
[vitest.config.*]
indent_size = 2

# Playwright configuration
[playwright.config.*]
indent_size = 2

# ========================================
# üöÄ CI/CD
# ========================================

# GitHub Actions
[.github/workflows/*.{yml,yaml}]
indent_size = 2
max_line_length = 120

# GitLab CI
[.gitlab-ci.yml]
indent_size = 2
max_line_length = 120

# ========================================
# üìä ARCHIVOS DE LOGS
# ========================================
[*.log]
indent_size = 2
# No modificar logs autom√°ticamente
trim_trailing_whitespace = false
insert_final_newline = false

# ========================================
# üéÆ ARCHIVOS ESPEC√çFICOS DEL JUEGO
# ========================================

# Shaders GLSL
[*.{glsl,vert,frag,vs,fs}]
indent_size = 2
max_line_length = 120

# Archivos de configuraci√≥n de assets
[*.{atlas,json}]
indent_size = 2

# ========================================
# üîç ARCHIVOS ESPECIALES
# ========================================

# Makefile (requiere tabs)
[{Makefile,makefile,*.mk}]
indent_style = tab
indent_size = 4

# Go files (convenci√≥n de tabs)
[*.go]
indent_style = tab
indent_size = 4

# Python (PEP 8)
[*.py]
indent_size = 4
max_line_length = 88

# ========================================
# üìã NOTAS DE CONFIGURACI√ìN
# ========================================

# IMPORTANTE:
# 1. Esta configuraci√≥n se aplica autom√°ticamente en editores compatibles
# 2. VS Code: Instalar extensi√≥n "EditorConfig for VS Code"
# 3. WebStorm/IntelliJ: Soporte nativo incluido
# 4. Sublime Text: Instalar package "EditorConfig"
# 5. Vim: Instalar plugin editorconfig-vim
# 6. Emacs: Instalar editorconfig-emacs

# VERIFICACI√ìN:
# Para verificar que la configuraci√≥n funciona:
# 1. Abrir cualquier archivo del proyecto
# 2. Verificar que la indentaci√≥n y EOL coincidan con esta config
# 3. Crear un archivo nuevo y verificar que se apliquen las reglas

# CONFLICTOS:
# Si hay conflictos con Prettier o ESLint:
# 1. EditorConfig tiene prioridad sobre configuraci√≥n del editor
# 2. Prettier y ESLint pueden sobrescribir EditorConfig
# 3. Asegurar que todas las configuraciones sean consistentes

# DEBUGGING:
# Si EditorConfig no funciona:
# 1. Verificar que el archivo est√© en la ra√≠z del proyecto
# 2. Verificar que el editor tenga soporte/plugin instalado
# 3. Verificar sintaxis del archivo (no espacios extras, etc.)
# 4. Reiniciar el editor despu√©s de cambios
