# ============================================================================
# 🌐 CRASH WORM 3D - NGINX DEFAULT SERVER CONFIGURATION
# ============================================================================
# Ubicación: nginx-default.conf
# Configuración del servidor por defecto optimizada para juego 3D

# ========================================
# 🎮 SERVIDOR PRINCIPAL DEL JUEGO
# ========================================

server {
    # ========================================
    # 📡 CONFIGURACIÓN DE PUERTOS
    # ========================================
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    
    # Nombre del servidor
    server_name crashworm3d.local localhost _;
    
    # Directorio raíz
    root /usr/share/nginx/html;
    index index.html index.htm;

    # ========================================
    # 📊 CONFIGURACIÓN DE LOGS
    # ========================================
    access_log /var/log/nginx/game_access.log game_format;
    error_log /var/log/nginx/game_error.log warn;

    # ========================================
    # 🔐 HEADERS DE SEGURIDAD
    # ========================================
    
    # Content Security Policy para juego 3D
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com blob:;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
        font-src 'self' https://fonts.gstatic.com data:;
        img-src 'self' data: blob: https: http:;
        media-src 'self' blob: data:;
        connect-src 'self' ws: wss: https: http:;
        worker-src 'self' blob:;
        child-src 'self' blob:;
        object-src 'none';
        base-uri 'self';
        form-action 'self';
        frame-ancestors 'none';
        upgrade-insecure-requests;
    " always;
    
    # Headers adicionales de seguridad
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Download-Options "noopen" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    
    # Headers específicos del juego
    add_header X-Game-Version "1.0.0" always;
    add_header X-Powered-By "Crash Worm 3D Engine" always;

    # ========================================
    # 🎯 CONFIGURACIÓN PRINCIPAL
    # ========================================
    
    # Página principal y SPA routing
    location / {
        # Rate limiting para requests generales
        limit_req zone=general burst=20 nodelay;
        
        # Intentar servir archivo, directorio, o fallback a index.html
        try_files $uri $uri/ @app;
        
        # Headers para PWA
        add_header X-PWA-Enabled "true" always;
        add_header X-App-Type "Progressive Web Game" always;
        
        # Cache control para HTML
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # Cache para service worker
        location = /sw.js {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Service-Worker-Allowed "/";
        }
        
        # Cache para manifest
        location = /manifest.json {
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
        }
    }
    
    # Fallback para SPA routing
    location @app {
        rewrite ^.*$ /index.html last;
    }

    # ========================================
    # 🎨 ASSETS ESTÁTICOS
    # ========================================
    
    # JavaScript y CSS con versionado
    location ~* ^/assets/.*\.(js|css|mjs)$ {
        limit_req zone=assets burst=50 nodelay;
        
        # Cache agresivo para archivos con hash
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Soporte para gzip precomprimido
        gzip_static on;
        
        # Headers específicos para módulos JS
        location ~* \.mjs$ {
            add_header Content-Type "text/javascript";
        }
    }
    
    # WebAssembly files
    location ~* \.wasm$ {
        limit_req zone=assets burst=10 nodelay;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "application/wasm";
        add_header Cross-Origin-Embedder-Policy "require-corp";
        add_header Cross-Origin-Opener-Policy "same-origin";
    }

    # ========================================
    # 🎮 ASSETS DEL JUEGO
    # ========================================
    
    # Texturas e imágenes
    location ~* ^/(textures|images)/.*\.(png|jpg|jpeg|webp|gif|svg|ico)$ {
        limit_req zone=assets burst=30 nodelay;
        
        expires 6M;
        add_header Cache-Control "public, max-age=15552000";
        add_header Vary "Accept-Encoding";
        
        # Headers para imágenes del juego
        add_header X-Asset-Type "image" always;
        add_header X-Cache-Status "HIT" always;
        
        # Optimización para imágenes grandes
        location ~* \.(png|jpg|jpeg)$ {
            # Habilitar ranges para descarga parcial
            add_header Accept-Ranges "bytes";
        }
    }
    
    # Modelos 3D y geometrías
    location ~* ^/models/.*\.(glb|gltf|obj|fbx|dae|bin)$ {
        limit_req zone=assets burst=20 nodelay;
        
        expires 6M;
        add_header Cache-Control "public, max-age=15552000";
        add_header X-Asset-Type "3d-model" always;
        
        # Headers para modelos 3D
        add_header Accept-Ranges "bytes";
        add_header X-3D-Format "WebGL" always;
    }
    
    # Audio del juego
    location ~* ^/audio/.*\.(wav|mp3|ogg|m4a|aac|flac)$ {
        limit_req zone=assets burst=25 nodelay;
        
        expires 6M;
        add_header Cache-Control "public, max-age=15552000";
        add_header X-Asset-Type "audio" always;
        add_header Accept-Ranges "bytes";
        
        # Headers específicos para audio
        location ~* \.wav$ {
            add_header Content-Type "audio/wav";
        }
        location ~* \.mp3$ {
            add_header Content-Type "audio/mpeg";
        }
        location ~* \.ogg$ {
            add_header Content-Type "audio/ogg";
        }
    }
    
    # Fuentes
    location ~* ^/fonts/.*\.(woff|woff2|ttf|eot|otf)$ {
        limit_req zone=assets burst=20 nodelay;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header X-Asset-Type "font" always;
        
        # Headers específicos para fuentes
        location ~* \.woff2$ {
            add_header Content-Type "font/woff2";
        }
        location ~* \.woff$ {
            add_header Content-Type "font/woff";
        }
    }

    # ========================================
    # 📱 PWA Y ICONOS
    # ========================================
    
    # Iconos de la aplicación
    location ~* ^/icons/.*\.(png|svg|ico)$ {
        expires 1M;
        add_header Cache-Control "public, max-age=2592000";
        add_header X-Asset-Type "icon" always;
        
        # Específico para favicon
        location = /favicon.ico {
            expires 1w;
            access_log off;
            log_not_found off;
        }
    }
    
    # Service Worker
    location = /sw.js {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Service-Worker-Allowed "/";
        add_header Content-Type "text/javascript";
    }

    # ========================================
    # 🔌 API Y WEBSOCKETS
    # ========================================
    
    # API REST del juego
    location ^~ /api/ {
        limit_req zone=api burst=10 nodelay;
        
        # Configuración de proxy (si existe backend)
        # proxy_pass http://game_api;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_cache_bypass $http_upgrade;
        
        # Fallback para desarrollo local
        return 503 '{"error":"API not available","message":"Backend server not configured"}';
        add_header Content-Type "application/json" always;
        
        # Headers para API
        add_header X-API-Version "1.0" always;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        # Manejar preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # WebSocket para multijugador
    location ^~ /socket.io/ {
        limit_req zone=websocket burst=5 nodelay;
        
        # Configuración de proxy WebSocket (si existe backend)
        # proxy_pass http://game_websocket;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_buffering off;
        # proxy_cache off;
        # proxy_read_timeout 86400s;
        # proxy_send_timeout 86400s;
        
        # Fallback para desarrollo
        return 503 '{"error":"WebSocket not available","message":"WebSocket server not configured"}';
        add_header Content-Type "application/json" always;
    }

    # ========================================
    # 📊 MONITOREO Y SALUD
    # ========================================
    
    # Health check básico
    location = /health {
        access_log off;
        return 200 '{"status":"healthy","service":"crash-worm-3d","timestamp":"$time_iso8601","version":"1.0.0"}';
        add_header Content-Type "application/json" always;
    }
    
    # Health check detallado
    location = /health/detailed {
        access_log off;
        return 200 '{
            "status":"healthy",
            "service":"crash-worm-3d-frontend",
            "version":"1.0.0",
            "timestamp":"$time_iso8601",
            "server":"$hostname",
            "uptime":"$upstream_response_time",
            "connections":{
                "active":$connections_active,
                "reading":$connections_reading,
                "writing":$connections_writing,
                "waiting":$connections_waiting
            }
        }';
        add_header Content-Type "application/json" always;
    }
    
    # Información de la aplicación
    location = /app-info {
        access_log off;
        return 200 '{
            "name":"Crash Worm 3D Adventure",
            "version":"1.0.0",
            "type":"Progressive Web Game",
            "features":["3D Graphics","Multiplayer","PWA","WebGL","Audio"],
            "requirements":["WebGL","Modern Browser","JavaScript"],
            "compatibility":["Chrome 80+","Firefox 78+","Safari 14+","Edge 88+"]
        }';
        add_header Content-Type "application/json" always;
    }

    # ========================================
    # 🛡️ SEGURIDAD Y PROTECCIÓN
    # ========================================
    
    # Bloquear acceso a archivos de configuración
    location ~ /\.(ht|git|svn|env) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
    
    # Bloquear archivos temporales
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
    
    # Bloquear archivos de backup
    location ~ \.(bak|backup|old|orig|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
    
    # Proteger archivos de configuración del proyecto
    location ~ \.(json|md|yml|yaml|toml|ini|conf)$ {
        # Permitir algunos archivos específicos
        location = /manifest.json { }
        location = /package.json { }
        
        # Denegar el resto
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # ========================================
    # 🔍 SEO Y CRAWLERS
    # ========================================
    
    # Robots.txt
    location = /robots.txt {
        access_log off;
        return 200 "User-agent: *\nAllow: /\nDisallow: /api/\nDisallow: /admin/\nSitemap: https://$host/sitemap.xml\n";
        add_header Content-Type "text/plain" always;
    }
    
    # Sitemap (si existe)
    location = /sitemap.xml {
        access_log off;
        try_files $uri =404;
        add_header Content-Type "application/xml" always;
    }

    # ========================================
    # 📄 PÁGINAS DE ERROR
    # ========================================
    
    # Páginas de error personalizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    error_page 403 /403.html;
    
    # Página 404 personalizada
    location = /404.html {
        internal;
        expires -1;
        add_header Cache-Control "no-cache";
    }
    
    # Páginas de error del servidor
    location = /50x.html {
        internal;
        expires -1;
        add_header Cache-Control "no-cache";
    }
    
    # Página de acceso denegado
    location = /403.html {
        internal;
        expires -1;
        add_header Cache-Control "no-cache";
    }

    # ========================================
    # 🧪 DESARROLLO Y DEBUGGING
    # ========================================
    
    # Endpoint de configuración (solo en desarrollo)
    location = /debug/config {
        # Solo permitir en desarrollo
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        access_log off;
        return 200 '{
            "nginx_version":"$nginx_version",
            "server_name":"$server_name",
            "document_root":"$document_root",
            "request_method":"$request_method",
            "request_uri":"$request_uri",
            "server_protocol":"$server_protocol",
            "remote_addr":"$remote_addr",
            "http_user_agent":"$http_user_agent"
        }';
        add_header Content-Type "application/json" always;
    }
    
    # Información de headers (debugging)
    location = /debug/headers {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        access_log off;
        add_header Content-Type "text/plain" always;
        return 200 "Headers recibidos:\n$http_headers\n\nRequest: $request\nUser-Agent: $http_user_agent\nAccept: $http_accept\n";
    }
}

# ========================================
# 🌍 SERVIDOR ADICIONAL PARA SUBDOMINIO
# ========================================

# Configuración para subdominios específicos (opcional)
# server {
#     listen 80;
#     server_name api.crashworm3d.local;
#     
#     location / {
#         proxy_pass http://game_api;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }